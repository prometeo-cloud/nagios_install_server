---
# Install nagios server
- name: Check Operating System
  fail:
    msg="Non supported operating system (CentOS or RHEL 7+)"
  when: ((ansible_os_family != "RedHat") or (ansible_distribution_major_version|int < 7))

- name: Ensuring subscription-manager is installed
  yum:
    name: subscription-manager
    state: latest

- name: Disabling all repositories
  command: subscription-manager repos --disable="*"

- name: Enabling only the required repositories
  command: subscription-manager repos --enable="{{ item }}"
  with_items: "{{ repos_to_enable }}"

- name: Activate the EPEL repository on RHEL 7.4
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: present

- name: Install nagios packages and its plugins
  yum:
    name: "{{ item }}"
    state: latest
  with_items: "{{ packages_to_install }}"

- name: Check nagios Users
  stat: path=/etc/nagios/passwd
  ignore_errors: true
  register: nagios_user_pwfile_exists

- name: Create empty password file
  command: touch /etc/nagios/passwd
  args:
    creates: /etc/nagios/passwd
  when: nagios_user_pwfile_exists != 0

- name: Create nagios admin user
  command: htpasswd -b -c /etc/nagios/passwd {{ nagios_admin_username }} {{ nagios_admin_password }}
  when: nagios_user_pwfile_exists != 0

- name: Create nagios guest user
  command: htpasswd -b /etc/nagios/passwd {{ nagios_guest_username }} {{ nagios_guest_password }}
  when: nagios_create_guest_user

- name: Configure nagios main configuration
  template: src=nagios.cfg.j2 dest=/etc/nagios/nagios.cfg

- name: Generate Nagios Admins contact details file
  template: src=contacts.cfg.j2 dest=/etc/nagios/objects/contacts.cfg

- name: Generate the nagios user CGI template
  template: src=cgi.cfg.j2 dest=/etc/nagios/cgi.cfg

- name: Configure nagios localhost monitoring
  template: src=localhost.cfg.j2 dest=/etc/nagios/objects/localhost.cfg

- name: Set HTTP Listen Port
  lineinfile: dest=/etc/httpd/conf/httpd.conf \
          regexp="^Listen" \
          line="Listen {{ nagios_http_port }}"

- name: HTTP Firewall
  firewalld:
    port: 80/tcp
    permanent: true
    state: enabled
  when: ansible_virtualization_type != "docker"

- name: HTTPS Firewall
  firewalld:
    port: 443/tcp
    permanent: true
    state: enabled
  when: ansible_virtualization_type != "docker"

- name: Start nagios service
  service:
    name: nagios
    state: started
    enabled: true
  when: ansible_virtualization_type != "docker"

- name: Setup HTTPD service
  service:
    name: httpd
    state: restarted
    enabled: true
  when: ansible_virtualization_type != "docker"

- name: Display nagios information
  debug:
    msg="You can access nagios at https://{{ ansible_fqdn }}/nagios using {{ nagios_admin_username }}"

- name: Display nagios guest information
  debug:
    msg="Guest read only users at https://{{ ansible_fqdn }}/nagios using {{ nagios_guest_username }}"